--- a/dkms/vboxhost/5.1.22_OSE/source/vboxdrv/r0drv/linux/the-linux-kernel.h	2017-07-05 13:28:54.077493724 +0200
+++ b/dkms/vboxhost/5.1.22_OSE/source/vboxdrv/r0drv/linux/the-linux-kernel.h	2017-07-05 13:34:15.829627958 +0200
@@ -159,6 +159,11 @@
 # include <asm/tlbflush.h>
 #endif
 
+/* for set_pages_x() */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
+# include <asm/set_memory.h>
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 7, 0)
 # include <asm/smap.h>
 #else
--- a/dkms/vboxhost/5.1.22_OSE/source/vboxdrv/r0drv/linux/memobj-r0drv-linux.c	2017-07-05 13:28:54.077493724 +0200
+++ b/dkms/vboxhost/5.1.22_OSE/source/vboxdrv/r0drv/linux/memobj-r0drv-linux.c	2017-07-05 13:35:19.628845750 +0200
@@ -902,6 +902,9 @@
     union
     {
         pgd_t       Global;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
+        p4d_t       Four;
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 11)
         pud_t       Upper;
 #endif
@@ -919,7 +922,23 @@
         return NULL;
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 11)
+# if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
+    u.Four  = *p4d_offset(&u.Global, ulAddr);
+    if (RT_UNLIKELY(p4d_none(u.Four)))
+        return NULL;
+    if (p4d_large(u.Four))
+    {
+        pPage = p4d_page(u.Four);
+        AssertReturn(pPage, NULL);
+        pfn   = page_to_pfn(pPage);      /* doing the safe way... */
+        AssertCompile(P4D_SHIFT - PAGE_SHIFT < 31);
+        pfn  += (ulAddr >> PAGE_SHIFT) & ((UINT32_C(1) << (P4D_SHIFT - PAGE_SHIFT)) - 1);
+        return pfn_to_page(pfn);
+    }
+    u.Upper = *pud_offset(&u.Four, ulAddr);
+# else /* < 4.12 */
     u.Upper = *pud_offset(&u.Global, ulAddr);
+# endif /* < 4.12 */
     if (RT_UNLIKELY(pud_none(u.Upper)))
         return NULL;
 # if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 25)
--- a/dkms/vboxhost/5.1.22_OSE/source/vboxnetflt/r0drv/linux/the-linux-kernel.h	2017-07-05 13:28:54.067493999 +0200
+++ b/dkms/vboxhost/5.1.22_OSE/source/vboxnetflt/r0drv/linux/the-linux-kernel.h	2017-07-05 13:40:18.704523373 +0200
@@ -159,6 +159,11 @@
 # include <asm/tlbflush.h>
 #endif
 
+/* for set_pages_x() */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
+# include <asm/set_memory.h>
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 7, 0)
 # include <asm/smap.h>
 #else
--- a/dkms/vboxhost/5.1.22_OSE/source/vboxpci/r0drv/linux/the-linux-kernel.h	2017-07-05 13:28:54.050494468 +0200
+++ b/dkms/vboxhost/5.1.22_OSE/source/vboxpci/r0drv/linux/the-linux-kernel.h	2017-07-05 13:40:49.606665800 +0200
@@ -159,6 +159,11 @@
 # include <asm/tlbflush.h>
 #endif
 
+/* for set_pages_x() */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
+# include <asm/set_memory.h>
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 7, 0)
 # include <asm/smap.h>
 #else
--- a/dkms/vboxhost/5.1.22_OSE/source/vboxnetadp/r0drv/linux/the-linux-kernel.h	2017-07-05 13:28:54.059494220 +0200
+++ b/dkms/vboxhost/5.1.22_OSE/source/vboxnetadp/r0drv/linux/the-linux-kernel.h	2017-07-05 13:41:19.595833889 +0200
@@ -159,6 +159,11 @@
 # include <asm/tlbflush.h>
 #endif
 
+/* for set_pages_x() */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
+# include <asm/set_memory.h>
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 7, 0)
 # include <asm/smap.h>
 #else
--- a/dkms/vboxguest/5.1.22_OSE/source/vboxguest/r0drv/linux/the-linux-kernel.h	2017-07-05 13:15:58.275925965 +0200
+++ b/dkms/vboxguest/5.1.22_OSE/source/vboxguest/r0drv/linux/the-linux-kernel.h	2017-07-05 13:16:10.703581342 +0200
@@ -159,6 +159,11 @@
 # include <asm/tlbflush.h>
 #endif
 
+/* for set_pages_x() */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
+# include <asm/set_memory.h>
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 7, 0)
 # include <asm/smap.h>
 #else
--- a/dkms/vboxguest/5.1.22_OSE/source/vboxguest/r0drv/linux/memobj-r0drv-linux.c	2017-07-05 12:20:32.869786503 +0200
+++ b/dkms/vboxguest/5.1.22_OSE/source/vboxguest/r0drv/linux/memobj-r0drv-linux.c	2017-07-05 13:09:36.997540926 +0200
@@ -902,6 +902,9 @@
     union
     {
         pgd_t       Global;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
+        p4d_t       Four;
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 11)
         pud_t       Upper;
 #endif
@@ -919,7 +922,23 @@
         return NULL;
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 11)
+# if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
+    u.Four  = *p4d_offset(&u.Global, ulAddr);
+    if (RT_UNLIKELY(p4d_none(u.Four)))
+        return NULL;
+    if (p4d_large(u.Four))
+    {
+        pPage = p4d_page(u.Four);
+        AssertReturn(pPage, NULL);
+        pfn   = page_to_pfn(pPage);      /* doing the safe way... */
+        AssertCompile(P4D_SHIFT - PAGE_SHIFT < 31);
+        pfn  += (ulAddr >> PAGE_SHIFT) & ((UINT32_C(1) << (P4D_SHIFT - PAGE_SHIFT)) - 1);
+        return pfn_to_page(pfn);
+    }
+    u.Upper = *pud_offset(&u.Four, ulAddr);
+# else /* < 4.12 */
     u.Upper = *pud_offset(&u.Global, ulAddr);
+# endif /* < 4.12 */
     if (RT_UNLIKELY(pud_none(u.Upper)))
         return NULL;
 # if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 25)
--- a/dkms/vboxguest/5.1.22_OSE/source/vboxvideo/include/the-linux-kernel.h	2017-07-05 13:10:37.940837487 +0200
+++ b/dkms/vboxguest/5.1.22_OSE/source/vboxvideo/include/the-linux-kernel.h	2017-07-05 13:10:47.272576933 +0200
@@ -159,6 +159,11 @@
 # include <asm/tlbflush.h>
 #endif
 
+/* for set_pages_x() */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
+# include <asm/set_memory.h>
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 7, 0)
 # include <asm/smap.h>
 #else
--- a/dkms/vboxguest/5.1.22_OSE/source/vboxvideo/vbox_ttm.c	2017-07-05 13:12:08.979298350 +0200
+++ b/dkms/vboxguest/5.1.22_OSE/source/vboxvideo/vbox_ttm.c	2017-07-05 13:12:20.327982242 +0200
@@ -275,11 +275,17 @@
     .ttm_tt_populate = vbox_ttm_tt_populate,
     .ttm_tt_unpopulate = vbox_ttm_tt_unpopulate,
     .init_mem_type = vbox_bo_init_mem_type,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0)
+    .eviction_valuable = ttm_bo_eviction_valuable,
+#endif
     .evict_flags = vbox_bo_evict_flags,
     .move = vbox_bo_move,
     .verify_access = vbox_bo_verify_access,
     .io_mem_reserve = &vbox_ttm_io_mem_reserve,
     .io_mem_free = &vbox_ttm_io_mem_free,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
+    .io_mem_pfn = ttm_bo_default_io_mem_pfn,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 7, 0) && LINUX_VERSION_CODE < KERNEL_VERSION(4, 11, 0)
     .lru_tail = &ttm_bo_default_lru_tail,
     .swap_lru_tail = &ttm_bo_default_swap_lru_tail,
--- a/dkms/vboxguest/5.1.22_OSE/source/vboxsf/r0drv/linux/the-linux-kernel.h	2017-07-05 12:20:32.861786720 +0200
+++ b/dkms/vboxguest/5.1.22_OSE/source/vboxsf/r0drv/linux/the-linux-kernel.h	2017-07-05 12:32:24.885191132 +0200
@@ -159,6 +159,11 @@
 # include <asm/tlbflush.h>
 #endif
 
+/* for set_pages_x() */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
+# include <asm/set_memory.h>
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 7, 0)
 # include <asm/smap.h>
 #else
